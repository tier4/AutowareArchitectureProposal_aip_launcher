<launch>

  <!-- Params -->
  <arg name="launch_driver" default="true"/>

  <arg name="model" default="PandarXT32"/>
  <arg name="sensor_frame" default="pandar"/>
  <arg name="return_mode" default="Strongest"/>
  <arg name="sensor_ip" default="192.168.1.201"/>
  <arg name="host_ip" default="255.255.255.255"/>
  <arg name="data_port" default="2368"/>
  <arg name="scan_phase" default="0.0"/>
  <arg name="cloud_min_angle" default="0"/>
  <arg name="cloud_max_angle" default="360"/>
  <arg name="max_range" default="120.0"/>
  <arg name="dual_return_distance_threshold" default="0.1"/>
  <arg name="vehicle_mirror_param_file"/>
  <arg name="container_name" default="hesai_node_container"/>
  <arg name="pointcloud_container_name" default="pointcloud_container"/>
  <arg name="use_pointcloud_container" default="false"/>
  <arg name="use_cuda_preprocessor" default="false"/>
  <arg name="udp_only" default="false"/>

  <include file="$(find-pkg-share common_sensor_launch)/launch/nebula_node_container.launch.py">
    <arg name="launch_driver" value="$(var launch_driver)"/>
    <arg name="sensor_model" value="$(var model)"/>
    <arg name="frame_id" value="$(var sensor_frame)"/>
    <arg name="return_mode" value="$(var return_mode)"/>
    <arg name="sensor_ip" value="$(var sensor_ip)"/>
    <arg name="host_ip" value="$(var host_ip)"/>
    <arg name="data_port" value="$(var data_port)"/>
    <arg name="scan_phase" value="$(var scan_phase)"/>
    <arg name="cloud_min_angle" value="$(var cloud_min_angle)"/>
    <arg name="cloud_max_angle" value="$(var cloud_max_angle)"/>
    <arg name="max_range" value="$(var max_range)"/>
    <arg name="dual_return_distance_threshold" value="$(var dual_return_distance_threshold)"/>
    <arg name="vehicle_mirror_param_file" value="$(var vehicle_mirror_param_file)"/>
    <arg name="container_name" value="$(var container_name)"/>
    <arg name="pointcloud_container_name" value="$(var pointcloud_container_name)"/>
    <arg name="use_pointcloud_container" value="$(var use_pointcloud_container)"/>
    <arg name="use_cuda_preprocessor" value="$(var use_cuda_preprocessor)"/>
    <arg name="use_intra_process" value="true"/>
    <arg name="use_multithread" value="true"/>
    <arg name="ptp_profile" value="automotive"/>
    <arg name="ptp_switch_type" value="NON_TSN"/>
    <arg name="ptp_transport_type" value="L2"/>
    <arg name="ptp_lock_threshold" value="100"/>
    <arg name="setup_sensor" value="true"/>
    <arg name="udp_only" value="$(var udp_only)"/>
    <arg name="retry_hw" value="true"/>
  </include>
</launch>
