<launch>

  <arg name="launch_driver" default="true" />
  <arg name="use_concat_filter" default="true" />
  <arg name="use_radius_search" default="false" />
  <arg name="vehicle_id" default="$(env VEHICLE_ID default)" />
  <arg name="vehicle_mirror_param_file" />
  <arg name="use_pointcloud_container" default="false" description="launch pointcloud container"/>
  <arg name="pointcloud_container_name" default="pointcloud_container"/>

  <group>
    <push-ros-namespace namespace="lidar"/>

    <group>
      <push-ros-namespace namespace="top"/>
      <include file="$(find-pkg-share aip_x1_1_launch)/launch/velodyne_VLP16.launch.xml">
        <arg name="sensor_frame" value="velodyne_top" />
        <arg name="device_ip" value="192.168.1.20"/>
        <arg name="port" value="2368"/>
        <arg name="scan_phase" value="180.0" />
        <arg name="launch_driver" value="$(var launch_driver)" />
        <arg name="vehicle_mirror_param_file" value="$(var vehicle_mirror_param_file)" />
      </include>
    </group>

    <group>
      <push-ros-namespace namespace="front_center" />
      <include file="$(find-pkg-share aip_x1_1_launch)/launch/pandar_node_container.launch.py">
        <arg name="model" value="PandarXT-32" />
        <arg name="frame_id" value="pandar_xt32_front_center" />
        <arg name="device_ip" value="192.168.1.201" />
        <arg name="lidar_port" value="2321" />
        <arg name="gps_port" value="10121" />
        <arg name="scan_phase" value="0.0" />
        <arg name="angle_range" value="[0.0, 360.0]"/>
        <arg name="distance_range" value="[0.05, 200.0]"/>
        <arg name="return_mode" value="Strongest" />
        <arg name="calibration" value="$(find-pkg-share individual_params)/config/$(var vehicle_id)/aip_x1_1/xt32.csv" />
        <arg name="launch_driver" value="$(var launch_driver)" />
      </include>
    </group>

    <include file="$(find-pkg-share aip_x1_1_launch)/launch/pointcloud_preprocessor.launch.py">
      <arg name="base_frame" value="base_link" />
      <arg name="use_intra_process" value="true" />
      <arg name="use_multithread" value="false" />
      <arg name="use_pointcloud_container" value="$(var use_pointcloud_container)" />
      <arg name="container_name" value="$(var pointcloud_container_name)"/>
    </include>

    <include file="$(find-pkg-share aip_x1_1_launch)/launch/topic_state_monitor.launch.py" />
  </group>
</launch>
